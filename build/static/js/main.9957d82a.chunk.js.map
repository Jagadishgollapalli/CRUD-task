{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["API_URL","App","props","createPost","a","axios","post","userId","state","title","body","data","posts","push","setState","UpdatePost","put","id","postIndex","findIndex","getPosts","get","deletePost","postId","delete","filter","handleChange","target","name","value","handleSubmit","e","preventDefault","selectPost","this","Form","onSubmit","type","disabled","FormGroup","onChange","Button","color","Table","striped","map","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAKMA,EAAQ,6CA2ICC,E,kDAxIb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAcRC,WAfkB,sBAeP,gCAAAC,EAAA,sEACUC,IAAMC,KAAKN,EAC9B,CACAO,OAAQ,EAAKC,MAAMD,OACnBE,MAAO,EAAKD,MAAMC,MAClBC,KAAM,EAAKF,MAAME,OALR,gBACHC,EADG,EACHA,MAMAC,EAPG,YAOO,EAAKJ,MAAMI,QACrBC,KAAKF,GACX,EAAKG,SAAS,CAACF,UATN,2CAfO,EA2BlBG,WA3BkB,sBA2BP,kCAAAX,EAAA,sEACUC,IAAMW,IAAN,UAAahB,EAAb,YAAwB,EAAKQ,MAAMS,IACtD,CACAV,OAAQ,EAAKC,MAAMD,OACnBE,MAAO,EAAKD,MAAMC,MAClBC,KAAM,EAAKF,MAAME,OALR,gBACHC,EADG,EACHA,KAOAC,EARG,YAQO,EAAKJ,MAAMI,OACrBM,EAAUN,EAAMO,WAAU,SAAAb,GAAI,OAAEA,EAAKW,KAAK,EAAKT,MAAMS,MAC3DL,EAAMM,GAAWP,EACjB,EAAKG,SAAS,CAACF,UAXN,2CA3BO,EA0CpBQ,SA1CoB,sBA0CX,8BAAAhB,EAAA,sEACYC,IAAMgB,IAAIrB,GADtB,gBACDW,EADC,EACDA,KACN,EAAKG,SAAS,CAACF,MAAMD,IAFd,2CA1CW,EAgDlBW,WAhDkB,uCAgDP,WAAMC,GAAN,eAAAnB,EAAA,sEACLC,IAAMmB,OAAN,UAAgBxB,EAAhB,YAA2BuB,IADtB,OAGXX,GADIA,EAFO,YAEG,EAAKJ,MAAMI,QACba,QAAO,SAAAnB,GAAI,OAAGA,EAAKW,KAAOM,KACtC,EAAKT,SAAS,CAACF,UAJJ,2CAhDO,wDAwDpBc,aAAa,YAA0B,IAAD,IAAvBC,OAAQC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,MAC1B,EAAKf,SAAL,eAAgBc,EAAMC,KAzDJ,EA4DpBC,aAAa,SAAAC,GACXA,EAAEC,iBACC,EAAKxB,MAAMS,GACZ,EAAKF,aAEL,EAAKZ,aAEP,EAAKW,SAAS,CAACP,OAAO,GAAIE,MAAM,GAAIC,KAAK,MAnEvB,EAuEpBuB,WAAW,SAAA3B,GACT,EAAKQ,SAAL,eAAkBR,KAtEhB,EAAKE,MAAM,CACTS,GAAG,GACHV,OAAO,GACPE,MAAM,GACNC,KAAK,GACLE,MAAM,IAPQ,E,qDAUpB,WACEsB,KAAKd,a,oBA+DL,WAAW,IAAD,OACR,OACA,gCACE,iDACA,eAACe,EAAA,EAAD,CAAMC,SAAUF,KAAKJ,aAArB,UACCI,KAAK1B,MAAMS,IACV,mCACA,gCACA,6CACA,uBACAW,KAAK,SACLS,KAAK,OAAMR,MAAOK,KAAK1B,MAAMS,GAAGqB,UAAQ,SAI1C,eAACC,EAAA,EAAD,WACE,gCACE,6CACA,uBAAOX,KAAK,SAASS,KAAK,OAAOR,MAAOK,KAAK1B,MAAMD,OAAQiC,SAAUN,KAAKR,kBAE1E,uBACA,gCACA,2CACA,uBAAOE,KAAK,QAAQS,KAAK,OAAOR,MAAOK,KAAK1B,MAAMC,MAAO+B,SAAUN,KAAKR,kBAExE,uBACA,gCACA,0CACA,uBAAOE,KAAK,OAAOS,KAAK,OAAOR,MAAOK,KAAK1B,MAAME,KAAM8B,SAAUN,KAAKR,qBAGxE,uBACA,8BACE,eAACe,EAAA,EAAD,CAAQC,MAAM,UAAUL,KAAK,SAA7B,UAAuCH,KAAK1B,MAAMS,GAAG,SAAS,MAA9D,gBAGJ,uBACA,eAAC0B,EAAA,EAAD,CAAOC,SAAO,EAAd,UACE,kCACE,oCACA,uCACA,sCACA,2CAEF,gCACKV,KAAK1B,MAAMI,MAAMiC,KAAI,SAAAvC,GACpB,OACE,+BACE,6BAAKA,EAAKW,KACV,6BAAKX,EAAKG,QACV,6BAAKH,EAAKI,OACV,6BAAI,cAAC+B,EAAA,EAAD,CAAQC,MAAM,UAAUI,QAAS,kBAAI,EAAKb,WAAW3B,IAArD,oBACJ,6BAAI,cAACmC,EAAA,EAAD,CAAQC,MAAM,SAASI,QAAS,kBAAI,EAAKxB,WAAWhB,EAAKW,KAAzD,wBALGX,EAAKW,mB,GA1HZ8B,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9957d82a.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button ,Table,Form,FormGroup} from 'reactstrap';\n\nconst API_URL=\"https://jsonplaceholder.typicode.com/posts\";\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      id:\"\",\n      userId:\"\",\n      title:\"\",\n      body:\"\",\n      posts:[]\n    };\n  }\ncomponentDidMount(){\n  this.getPosts();\n}\n  //CREATE\n  //Check JSON Placeholder url for Syntax \n  createPost=async()=>{\n    const{data}= await axios.post(API_URL,\n    {\n    userId: this.state.userId,\n    title: this.state.title,\n    body: this.state.body\n    });\n    const posts=[...this.state.posts];\n    posts.push(data);\n    this.setState({posts});\n  };\n  //UPDATE\n  UpdatePost=async()=>{\n    const{data}= await axios.put(`${API_URL}/${this.state.id}`,\n    {\n    userId: this.state.userId,\n    title: this.state.title,\n    body: this.state.body\n    });\n    // console.log(data);\n    const posts=[...this.state.posts];\n    const postIndex=posts.findIndex(post=>post.id===this.state.id);\n    posts[postIndex]=data;\n    this.setState({posts});\n  };\n\n  //READ\ngetPosts=async()=>{\n  const{data}= await axios.get(API_URL);\n  this.setState({posts:data});\n};\n\n //DELETE\n  deletePost=async postId=>{\n  await axios.delete(`${API_URL}/${postId}`);\n  let posts=[...this.state.posts];\n  posts=posts.filter(post =>post.id !== postId);\n  this.setState({posts});\n };\n\n //HANDLE FUNCTION\nhandleChange=({target:{name,value}})=>{\n  this.setState({[name]:value});\n}\n//ON - SUBMIT\nhandleSubmit=e=>{\n  e.preventDefault();\n  if(this.state.id){\n    this.UpdatePost();\n  }else{\n    this.createPost();\n  }\n  this.setState({userId:'', title:'', body:''});\n};\n\n//SELECT-POST\nselectPost=post=>{\n  this.setState({...post});\n}\n  render () {\n    return(\n    <div>\n      <h1> Fake API Data </h1>\n      <Form onSubmit={this.handleSubmit}>\n      {this.state.id && (\n        <>\n        <div>\n        <label>POST ID:</label>\n        <input \n        name=\"userId\"\n        type=\"text\"value={this.state.id}disabled/>\n        </div>\n        </>\n      )}\n      <FormGroup>\n        <div>\n          <label>User Id:</label>      \n          <input name=\"userId\" type=\"text\" value={this.state.userId} onChange={this.handleChange}/>\n          </div>\n          <br />\n          <div>\n          <label>Title:</label>\n          <input name=\"title\" type=\"text\" value={this.state.title} onChange={this.handleChange}/>\n          </div>\n          <br />\n          <div>\n          <label>Body:</label>\n          <input name=\"body\" type=\"text\" value={this.state.body} onChange={this.handleChange}/>\n        </div>\n        </FormGroup>\n        <br />\n        <div>\n          <Button color='primary' type=\"submit\">{this.state.id?'update':'Add'} Post</Button>\n        </div>\n      </Form>\n      <br />\n      <Table striped>\n        <thead>\n          <td>Id</td>\n          <td>Title</td>\n          <td>Body</td>\n          <td>Action</td>\n        </thead>\n        <tbody>\n            {this.state.posts.map(post=>{\n              return(\n                <tr key={post.id}>\n                  <td>{post.id}</td>\n                  <td>{post.title}</td>\n                  <td>{post.body}</td>\n                  <td><Button color=\"success\" onClick={()=>this.selectPost(post)}>Edit</Button></td>\n                  <td><Button color=\"danger\" onClick={()=>this.deletePost(post.id)}>Delete</Button></td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </div>\n    );\n  }\n  }\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import AppFunc from './AppFunc';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}